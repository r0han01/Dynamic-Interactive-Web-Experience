name: Flask Application CI/CD

on:
  repository_dispatch:
    types: [docker_push]

jobs:
  deploy_to_server:
    name: Deploy Docker image to remote server
    runs-on: ubuntu-latest
    permissions:
      packages: read  # Read access for Docker images
      contents: read
      id-token: write

    steps:
      # Step 1: Check out the repository
      - name: Check out the repo
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Extract metadata (tags, labels) for Docker
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: docker.io/r0han01/circleci

      # Step 4: Pull the Docker image with the latest tag from Docker Hub
      - name: Pull Docker image with latest tag
        run: |
          docker pull docker.io/r0han01/circleci:latest

      # Step 5: SSH into the remote server and deploy the image
      - name: Execute SSH commands to deploy Docker container
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            # Stop and remove any existing container
            docker stop circleci || true
            docker rm circleci || true
            # Remove the old image if it exists
            docker rmi docker.io/r0han01/circleci:latest || true
            # Run the new Docker container from the image
            docker run --name circleci -d -p 5000:5000 docker.io/r0han01/circleci:latest
